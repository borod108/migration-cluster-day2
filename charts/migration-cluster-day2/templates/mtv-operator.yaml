---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.mtvOperator.subscription.namespace }}
  # prevent the namespace deletion because in some sceneraious the namespace
  # is not removed and stays in terminating state.
  annotations:
    helm.sh/resource-policy: keep
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: migration
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
spec:
  targetNamespaces:
    - {{ .Values.mtvOperator.subscription.namespace }}
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: mtv-operator
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
spec:
  channel: {{ .Values.mtvOperator.subscription.channel }}
  installPlanApproval: Automatic
  name: mtv-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: forklift.konveyor.io/v1beta1
kind: ForkliftController
metadata:
  name: forklift-controller
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
spec:
  feature_ui_plugin: "true"
  feature_validation: "true"
  feature_volume_populator: "true"
---
apiVersion: forklift.konveyor.io/v1beta1
kind: Provider
metadata:
  name: vmware-provider
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
  labels:
    app: mtv
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
spec:
  type: vsphere
  url: "https://vcenter.example.com/sdk"
  secret:
    name: vmware-credentials
    namespace: {{ .Values.mtvOperator.subscription.namespace }}
  settings:
    vddkInitImage: image-registry.openshift-image-registry.svc:5000/{{ .Values.mtvOperator.subscription.namespace }}/vddk:latest
---
apiVersion: v1
kind: Secret
metadata:
  name: vmware-credentials
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
---


---
apiVersion: batch/v1
kind: Job
metadata:
  name: mtv-ready
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      name: mtv-ready
    spec:
      restartPolicy: OnFailure
      serviceAccountName: migration-cluster-day2-installer
      containers:
        - name: readyness 
          image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - "bin/bash"
            - "-c"
          args:
            - |
              # check the forklift api exists otherwise we can't create a controllre
              # because the hook will fail
              oc get service forklift-api

---
apiVersion: batch/v1
kind: Job
metadata:
  name: mtv-cleanups
  namespace: {{ .Values.mtvOperator.subscription.namespace }}
  annotations:
    helm.sh/hook: pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
      name: mtv-cleanups
    spec:
      restartPolicy: Never
      serviceAccountName: migration-cluster-day2-installer
      containers:
        - name: cleanup
          image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - "bin/bash"
            - "-c"
          args:
            - |
              # cleanups if needed
              # remove csv because it is not labeled as a helm resource
              oc delete csv -n openshift-mtv --all --force

